-- Tabla de ROLES
CREATE TABLE ROLES (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  NOMBRE VARCHAR(100) NOT NULL UNIQUE
);

-- Tabla de USUARIOS
CREATE TABLE USUARIOS (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  NOMBRE VARCHAR(255) NOT NULL,
  EMAIL VARCHAR(255) UNIQUE NOT NULL,
  CONTRASENA VARCHAR(255) NOT NULL,
  FECHA_REGISTRO DATETIME DEFAULT CURRENT_TIMESTAMP,
  ULTIMO_LOGIN DATETIME NULL,
  ROL_ID BIGINT NOT NULL,
  CONSTRAINT FK_USUARIOS_ROL FOREIGN KEY (ROL_ID) REFERENCES ROLES(ID)
);

-- Tabla de PERMISOS
CREATE TABLE PERMISOS (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  NOMBRE VARCHAR(100) NOT NULL UNIQUE,
  DESCRIPCION VARCHAR(255) NOT NULL
);

-- Relación entre ROLES y PERMISOS (muchos a muchos)
CREATE TABLE ROL_PERMISOS (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  ROL_ID BIGINT NOT NULL,
  PERMISO_ID BIGINT NOT NULL,
  CONSTRAINT FK_ROL_PERMISOS_ROL FOREIGN KEY (ROL_ID) REFERENCES ROLES(ID) ON DELETE CASCADE,
  CONSTRAINT FK_ROL_PERMISOS_PERMISO FOREIGN KEY (PERMISO_ID) REFERENCES PERMISOS(ID) ON DELETE CASCADE,
  CONSTRAINT UQ_ROL_PERMISOS UNIQUE (ROL_ID, PERMISO_ID)
);

-- Tabla de ÁREAS
CREATE TABLE AREAS (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  NOMBRE VARCHAR(100) NOT NULL UNIQUE
);

-- Tabla de TIPOS DE DOCUMENTO
CREATE TABLE TIPOS_DOCUMENTO (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  DESCRIPCION VARCHAR(255) NOT NULL UNIQUE
);

-- Tabla de TIPOS DE ARCHIVO
CREATE TABLE TIPOS_ARCHIVO (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  DESCRIPCION VARCHAR(100) NOT NULL UNIQUE
);

-- Tabla de DOCUMENTOS
CREATE TABLE DOCUMENTOS (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  FECHA_INSERCION DATETIME DEFAULT CURRENT_TIMESTAMP,
  USUARIO_ID BIGINT NOT NULL,
  TIPO_DOCUMENTO_ID BIGINT NOT NULL,
  EXTENSION VARCHAR(50) NOT NULL,
  AREA_ID BIGINT NOT NULL,
  NOMBRE_ORIGINAL VARCHAR(255) NOT NULL,
  NOMBRE_GENERADO VARCHAR(255) NOT NULL,
  RUTA VARCHAR(255) NOT NULL,
  TIPO_ARCHIVO_ID BIGINT NOT NULL,
  ULTIMA_EDICION DATETIME NULL,
  VERSION_ACTUAL BIGINT NOT NULL DEFAULT 1,
  CONSTRAINT FK_DOCUMENTOS_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIOS(ID),
  CONSTRAINT FK_DOCUMENTOS_TIPO_DOCUMENTO FOREIGN KEY (TIPO_DOCUMENTO_ID) REFERENCES TIPOS_DOCUMENTO(ID),
  CONSTRAINT FK_DOCUMENTOS_AREA FOREIGN KEY (AREA_ID) REFERENCES AREAS(ID),
  CONSTRAINT FK_DOCUMENTOS_TIPO_ARCHIVO FOREIGN KEY (TIPO_ARCHIVO_ID) REFERENCES TIPOS_ARCHIVO(ID)
);

-- Tabla de VERSIONES de DOCUMENTOS
CREATE TABLE DOCUMENTO_VERSIONES (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  DOCUMENTO_ID BIGINT NOT NULL,
  NUMERO_VERSION BIGINT NOT NULL,
  USUARIO_ID BIGINT NOT NULL,
  FECHA_EDICION DATETIME DEFAULT CURRENT_TIMESTAMP,
  RUTA_VERSION VARCHAR(255) NOT NULL,
  NOMBRE_GENERADO_VERSION VARCHAR(255) NOT NULL,
  CONSTRAINT FK_DOCUMENTO_VERSIONES_DOCUMENTO FOREIGN KEY (DOCUMENTO_ID) REFERENCES DOCUMENTOS(ID) ON DELETE CASCADE,
  CONSTRAINT FK_DOCUMENTO_VERSIONES_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIOS(ID),
  CONSTRAINT UQ_DOCUMENTO_VERSIONES UNIQUE (DOCUMENTO_ID, NUMERO_VERSION)
);

-- Tabla para gestionar PERMISOS de DOCUMENTOS
CREATE TABLE DOCUMENTO_PERMISOS (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  DOCUMENTO_ID BIGINT NOT NULL,
  USUARIO_ID BIGINT NOT NULL,
  PERMISO_ID BIGINT NOT NULL,
  FECHA_ASIGNACION DATETIME DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FK_DOCUMENTO_PERMISOS_DOCUMENTO FOREIGN KEY (DOCUMENTO_ID) REFERENCES DOCUMENTOS(ID) ON DELETE CASCADE,
  CONSTRAINT FK_DOCUMENTO_PERMISOS_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIOS(ID) ON DELETE CASCADE,
  CONSTRAINT FK_DOCUMENTO_PERMISOS_PERMISO FOREIGN KEY (PERMISO_ID) REFERENCES PERMISOS(ID),
  CONSTRAINT UQ_DOCUMENTO_PERMISOS UNIQUE (DOCUMENTO_ID, USUARIO_ID, PERMISO_ID)
);

-- Tabla para gestionar EDITORES de DOCUMENTOS
CREATE TABLE DOCUMENTO_EDITORES (
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  DOCUMENTO_ID BIGINT NOT NULL,
  USUARIO_ID BIGINT NOT NULL,
  FECHA_EDICION DATETIME DEFAULT CURRENT_TIMESTAMP,
  VERSION_EDITADA BIGINT NOT NULL,
  CONSTRAINT FK_DOCUMENTO_EDITORES_DOCUMENTO FOREIGN KEY (DOCUMENTO_ID) REFERENCES DOCUMENTOS(ID) ON DELETE CASCADE,
  CONSTRAINT FK_DOCUMENTO_EDITORES_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIOS(ID),
  CONSTRAINT FK_DOCUMENTO_EDITORES_VERSION FOREIGN KEY (VERSION_EDITADA) REFERENCES DOCUMENTO_VERSIONES(ID),
  CONSTRAINT UQ_DOCUMENTO_EDITORES UNIQUE (DOCUMENTO_ID, USUARIO_ID)
);

-- Índices para mejorar el rendimiento
CREATE INDEX IDX_USUARIOS_EMAIL ON USUARIOS(EMAIL);
CREATE INDEX IDX_DOCUMENTOS_USUARIO_ID ON DOCUMENTOS(USUARIO_ID);
CREATE INDEX IDX_DOCUMENTOS_AREA_ID ON DOCUMENTOS(AREA_ID);
CREATE INDEX IDX_DOCUMENTO_VERSIONES_DOC_ID ON DOCUMENTO_VERSIONES(DOCUMENTO_ID);
CREATE INDEX IDX_DOCUMENTO_PERMISOS_DOC_ID ON DOCUMENTO_PERMISOS(DOCUMENTO_ID);
CREATE INDEX IDX_DOCUMENTO_EDITORES_DOC_ID ON DOCUMENTO_EDITORES(DOCUMENTO_ID);

-- Insertar roles básicos
INSERT INTO ROLES (NOMBRE) VALUES 
('SUPER'),
('ADMIN'),
('USER'),
('GUEST');

-- Insertar permisos básicos
INSERT INTO PERMISOS (NOMBRE, DESCRIPCION) VALUES 
('CREATE', 'Permite crear nuevos documentos'),
('EDIT', 'Permite editar documentos existentes'),
('DELETE', 'Permite eliminar documentos'),
('READ', 'Permite ver documentos'),
('DOWNLOAD','Permite descargar documento'),
('CREATE_USER', 'Permite gestionar usuarios');

-- Asignar permisos a rol 'SUPER'
INSERT INTO ROL_PERMISOS (ROL_ID, PERMISO_ID)
SELECT r.ID, p.ID 
FROM ROLES r 
CROSS JOIN PERMISOS p 
WHERE r.NOMBRE = 'SUPER' 
AND p.NOMBRE IN ('CREATE', 'EDIT', 'DELETE', 'READ', 'DOWNLOAD', 'CREATE_USER' );

-- Asignar permisos al rol 'ADMIN'
INSERT INTO ROL_PERMISOS (ROL_ID, PERMISO_ID)
SELECT r.ID, p.ID 
FROM ROLES r 
JOIN PERMISOS p ON p.NOMBRE IN ('CREATE', 'EDIT', 'DELETE', 'READ', 'DOWNLOAD') 
WHERE r.NOMBRE = 'ADMIN';

-- Asignar permisos al rol 'USER'
INSERT INTO ROL_PERMISOS (ROL_ID, PERMISO_ID)
SELECT r.ID, p.ID 
FROM ROLES r 
JOIN PERMISOS p ON p.NOMBRE IN ('CREATE', 'EDIT', 'READ', 'DOWNLOAD') 
WHERE r.NOMBRE = 'USER';

-- Asignar permisos al rol 'GUEST'
INSERT INTO ROL_PERMISOS (ROL_ID, PERMISO_ID)
SELECT r.ID, p.ID 
FROM ROLES r 
JOIN PERMISOS p ON p.NOMBRE = 'READ' 
WHERE r.NOMBRE = 'GUEST';


-- Insertar tipos de documento
INSERT INTO TIPOS_DOCUMENTO (DESCRIPCION) VALUES 
('Informe'),
('Memorando'),
('Oficio'),
('Carta'),
('Solicitud'),
('Constancia'),
('Acta'),
('Presupuesto'),
('Contrato'),
('Factura'),
('Declaración Jurada'),
('Informe de Evaluación'),
('Informe Financiero'),
('Política Interna'),
('Manual de Procedimientos'),
('Documento de Identidad');

-- Insertar áreas
INSERT INTO AREAS (NOMBRE) VALUES 
('Administración Académica'),
('Recursos Humanos'),
('Contabilidad'),
('Finanzas'),
('Servicios Estudiantiles'),
('Desarrollo Curricular'),
('Calidad Educativa'),
('Investigación y Desarrollo'),
('Tecnologías de la Información'),
('Comunicación y Marketing'),
('Planificación Estratégica'),
('Soporte Académico'),
('Atención al Estudiante'),
('Gestión de Proyectos'),
('Relaciones Externas');


-- Insertar tipos de archivo
INSERT INTO TIPOS_ARCHIVO (DESCRIPCION) VALUES 
('PDF'),
('Word'),
('Excel'),
('Imagen'),
('Presentación Power Point');

-- Insertar usuario administrador por defecto
-- Nombre: super
-- Contraseña: sueper123 (hasheada)
INSERT INTO USUARIOS (NOMBRE, EMAIL, CONTRASENA, ROL_ID) VALUES 
('super', 'superadmin@sistema.com', SHA2('super123', 256), 
 (SELECT ID FROM ROLES WHERE NOMBRE = 'SUPER'));
